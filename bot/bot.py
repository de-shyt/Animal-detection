import os
import config
import telebot
from telebot import types

bot = telebot.TeleBot(config.BOT_TOKEN)


class Animals:
    def __init__(self):
        self.penguins = False
        self.bears = False


animal_detection = Animals()


@bot.message_handler(commands=['start'])
def send_welcome(message):
    sticker = open('sticker.webp', 'rb')
    bot.send_sticker(message.chat.id, sticker)
    bot.send_message(message.chat.id,
                     ("<b>üêæ–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Animal Detection Bot! üêæ</b> \n \n"
                      "–ú—ã —Å–æ–æ–±—â–∞–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—É–Ω—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∂–∏–≤–æ—Ç–Ω—ã—Ö –≤ –∑–æ–æ–ø–∞—Ä–∫–µ.\n \n"
                      "üôâ –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–ª–µ–¥–∏—Ç—å –∑–∞ –∂–∏–≤–æ—Ç–Ω—ã–º –≤–≤–µ–¥–∏—Ç–µ /add –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∂–∏–≤–æ—Ç–Ω–æ–µ.\n"
                      "üôà –ß—Ç–æ–±—ã –ø–µ—Ä–µ—Å—Ç–∞—Ç—å —Å–ª–µ–¥–∏—Ç—å –∑–∞ –∂–∏–≤–æ—Ç–Ω—ã–º - –≤–≤–µ–¥–∏—Ç–µ /remove –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∂–∏–≤–æ—Ç–Ω–æ–µ.\n"
                      "üîç –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∑–∞ –∫–µ–º –≤—ã —Å–ª–µ–¥–∏—Ç–µ - –≤–≤–µ–¥–∏—Ç–µ /animals."
                      ), parse_mode='html')


@bot.message_handler(commands=['add'])
def choose_animal(message):
    markup = types.InlineKeyboardMarkup()
    penguins_btn = types.InlineKeyboardButton("üêß –ü–∏–Ω–≥–≤–∏–Ω—ã", callback_data="add_penguins")
    bears_btn = types.InlineKeyboardButton("üêª‚Äç‚ùÑÔ∏è –ú–µ–¥–≤–µ–¥–∏", callback_data="add_bears")
    markup.add(penguins_btn, bears_btn)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞ –∫–µ–º —Ö–æ—Ç–∏—Ç–µ —Å–ª–µ–¥–∏—Ç—å:", reply_markup=markup)


@bot.message_handler(commands=['remove'])
def choose_animal(message):
    markup = types.InlineKeyboardMarkup()
    penguins_btn = types.InlineKeyboardButton("üêß –ü–∏–Ω–≥–≤–∏–Ω—ã", callback_data="rem_penguins")
    bears_btn = types.InlineKeyboardButton("üêª‚Äç‚ùÑÔ∏è –ú–µ–¥–≤–µ–¥–∏", callback_data="rem_bears")
    markup.add(penguins_btn, bears_btn)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞ –∫–µ–º –Ω–µ —Ö–æ—Ç–∏—Ç–µ —Å–ª–µ–¥–∏—Ç—å:", reply_markup=markup)


@bot.message_handler(commands=['animals'])
def show_tracked_animals(message):
    tracked_animals = []

    if animal_detection.penguins:
        tracked_animals.append("üêß –ø–∏–Ω–≥–≤–∏–Ω–∞–º–∏")
    if animal_detection.bears:
        tracked_animals.append("üêª‚Äç‚ùÑÔ∏è –º–µ–¥–≤–µ–¥—è–º–∏")

    if tracked_animals:
        response = "–í—ã —Å–ª–µ–¥–∏—Ç–µ –∑–∞: " + ", ".join(tracked_animals) + "."
    else:
        response = "–í—ã –ø–æ–∫–∞ –Ω–µ —Å–ª–µ–¥–∏—Ç–µ –Ω–∏ –∑–∞ –æ–¥–Ω–∏–º –∂–∏–≤–æ—Ç–Ω—ã–º."

    bot.send_message(message.chat.id, response)


@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == "add_penguins":
        bot.answer_callback_query(call.id, "–¢–µ–ø–µ—Ä—å –≤—ã —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –ø–∏–Ω–≥–≤–∏–Ω–∞–º–∏!")
        animal_detection.penguins = True
    elif call.data == "add_bears":
        bot.answer_callback_query(call.id, "–¢–µ–ø–µ—Ä—å –≤—ã —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –º–µ–¥–≤–µ–¥—è–º–∏!")
        animal_detection.bears = True
    elif call.data == "rem_penguins":
        bot.answer_callback_query(call.id, "–¢–µ–ø–µ—Ä—å –≤—ã –Ω–µ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –ø–∏–Ω–≥–≤–∏–Ω–∞–º–∏!")
        animal_detection.penguins = False
    elif call.data == "rem_bears":
        bot.answer_callback_query(call.id, "–¢–µ–ø–µ—Ä—å –≤—ã –Ω–µ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –º–µ–¥–≤–µ–¥—è–º–∏!")
        animal_detection.bears = False


bot.infinity_polling()
